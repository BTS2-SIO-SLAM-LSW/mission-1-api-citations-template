# .github/workflows/classroom.yml
# Workflow autograding pour Mission API Citations + GitHub Pages

name: Autograding Tests

on:
  - push
  - workflow_dispatch
  - repository_dispatch

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Test 1: V√©rification des fichiers obligatoires
    - name: Test fichiers obligatoires
      id: test-fichiers
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'Fichiers obligatoires pr√©sents'
        setup-command: ''
        command: 'test -f index.html && test -f style.css && test -f script.js && test -f evaluation.json'
        timeout: 1
        max-score: 2

    # Test 2: V√©rification QCM compl√©t√©
    - name: Test QCM evaluation compl√©t√©
      id: test-qcm
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'QCM evaluation compl√©t√©'
        setup-command: ''
        command: 'test -s evaluation.json && grep -q "\"nom\"" evaluation.json && grep -q "\"reponse\"" evaluation.json && ! grep -q "\"reponse\": \"\"" evaluation.json'
        timeout: 1
        max-score: 3

    # Test 3: V√©rification GitHub Pages (adapt√© pour "mission")
    - name: Test GitHub Pages accessible
      id: test-pages
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'GitHub Pages accessible'
        setup-command: 'sleep 30'
        command: 'curl -s -o /dev/null -w "%{http_code}" "https://${{ github.actor }}.github.io/mission-1-api-citations-${{ github.actor }}/" | grep -q "200"'
        timeout: 2
        max-score: 5

    # Test bonus: Validation HTML (optionnel)
    - name: Test validation HTML
      id: test-html
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'HTML valide'
        setup-command: 'npm install -g html-validate'
        command: 'html-validate index.html || true'
        timeout: 1
        max-score: 0
      continue-on-error: true

    # Test bonus: V√©rification API JavaScript (optionnel)
    - name: Test JavaScript API
      id: test-js-api
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: 'Code JavaScript API'
        setup-command: ''
        command: 'grep -q "fetch" script.js && grep -q "quotable" script.js'
        timeout: 1
        max-score: 0
      continue-on-error: true

    # Rapport final des r√©sultats
    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        TEST-FICHIERS_RESULTS: "${{ steps.test-fichiers.outputs.result }}"
        TEST-QCM_RESULTS: "${{ steps.test-qcm.outputs.result }}"
        TEST-PAGES_RESULTS: "${{ steps.test-pages.outputs.result }}"
        TEST-HTML_RESULTS: "${{ steps.test-html.outputs.result }}"
        TEST-JS-API_RESULTS: "${{ steps.test-js-api.outputs.result }}"
      with:
        runners: test-fichiers,test-qcm,test-pages,test-html,test-js-api

    # Notification des r√©sultats
    - name: R√©sultats des tests
      if: always()
      run: |
        echo "üéØ Tests Mission API Citations termin√©s"
        echo "üìä Fichiers obligatoires: ${{ steps.test-fichiers.outputs.points }}/${{ steps.test-fichiers.outputs.max-points }} points"
        echo "üìù QCM evaluation: ${{ steps.test-qcm.outputs.points }}/${{ steps.test-qcm.outputs.max-points }} points"
        echo "üåê GitHub Pages: ${{ steps.test-pages.outputs.points }}/${{ steps.test-pages.outputs.max-points }} points"
        echo "‚úÖ Total automatique: ${{ steps.test-fichiers.outputs.points + steps.test-qcm.outputs.points + steps.test-pages.outputs.points }}/10 points"

    # Cr√©ation d'un artifact avec les r√©sultats (pour votre collecte)
    - name: Sauvegarde r√©sultats pour collecte
      if: always()
      run: |
        mkdir -p results
        echo "{
          \"student\": \"${{ github.actor }}\",
          \"repository\": \"${{ github.repository }}\",
          \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
          \"tests\": {
            \"fichiers\": {
              \"score\": ${{ steps.test-fichiers.outputs.points || 0 }},
              \"max_score\": ${{ steps.test-fichiers.outputs.max-points || 2 }},
              \"status\": \"${{ steps.test-fichiers.outputs.result || 'failed' }}\"
            },
            \"qcm\": {
              \"score\": ${{ steps.test-qcm.outputs.points || 0 }},
              \"max_score\": ${{ steps.test-qcm.outputs.max-points || 3 }},
              \"status\": \"${{ steps.test-qcm.outputs.result || 'failed' }}\"
            },
            \"pages\": {
              \"score\": ${{ steps.test-pages.outputs.points || 0 }},
              \"max_score\": ${{ steps.test-pages.outputs.max-points || 5 }},
              \"status\": \"${{ steps.test-pages.outputs.result || 'failed' }}\"
            }
          },
          \"total_score\": $(( ${{ steps.test-fichiers.outputs.points || 0 }} + ${{ steps.test-qcm.outputs.points || 0 }} + ${{ steps.test-pages.outputs.points || 0 }} )),
          \"max_total_score\": 10,
          \"pages_url\": \"https://${{ github.actor }}.github.io/mission-1-api-citations-${{ github.actor }}/\"
        }" > results/autograding-results.json

    - name: Upload r√©sultats
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: autograding-results
        path: results/autograding-results.json
        retention-days: 30